{"version":3,"sources":["screens/ContactsList/ContactsList.module.css","components/AddInfoForm/AddInfoForm.module.css","components/Popup/Popup.module.css","components/UserCreationForm/ContactCreationForm.module.css","components/ConfirmationForm/ConfirmationForm.module.css","components/DefaultButton/DefaultButton.module.css","components/Container/Container.module.css","store/storeSlice.js","store/stateSlice/stateSlice.js","components/DefaultButton/DefaultButton.jsx","components/Popup/Popup.jsx","components/UserCreationForm/ContactCreationForm.jsx","components/ConfirmationForm/ConfirmationForm.jsx","screens/ContactsList/ContactsList.jsx","components/AddInfoForm/AddInfoForm.jsx","screens/UserScreen/UserScreen.jsx","Router.js","components/Container/Container.jsx","App.js","store/index.js","index.js","screens/UserScreen/UserScreen.module.css"],"names":["module","exports","storeSlice","createSlice","name","initialState","contactsList","ID","contactName","contactInfo","contactForm","uuid","slice","currentContact","editContactValue","title","text","prevContactState","reducers","addContactName","state","action","payload","addContact","push","clearContactForm","deleteContact","filter","contact","setCurrentContact","forEach","el","addContactInfo","saveContactInfo","deleteContactInfo","info","setEditContactValue","item","setEditContactTitle","setEditContactText","editContactInfo","console","log","setPrevContactState","cancelChange","clearPrevContactState","actions","stateSlice","creationPopupIsActive","delitionPopupIsActive","addInfoPopupIsActive","currentContactID","newUserInfo","currentContactInfoID","editInfoPopupIsActive","cancelPopupIsActive","setActiveCreationPopup","setActiveDelitionPopup","setCurrentContactID","setActiveAddInfoPopup","setUserInfoTitle","setUserInfoText","clearNewUserInfo","setCurrentContactInfoID","setActiveEditPopup","setActiveCancelPopup","DefaultButton","onClick","type","content","className","style","Popup","isActive","children","closeFunc","ContactCreationForm","onSubmit","changeName","acceptBtn","cancelBtn","placeholder","id","required","value","onChange","ConfirmationForm","accept","cancel","icon","faCheckCircle","faTimesCircle","ContactsList","store","useSelector","reduxDispatch","useDispatch","openCreationPopup","openDeletionPopup","e","preventDefault","target","faUserTimes","faUserPlus","map","indx","to","faUserEdit","faUserMinus","AddInfoForm","setTitle","setInfo","htmlFor","UserScreen","saveContact","openAddInfoPopup","openEditInfoPopup","openUndoChangesPopup","addInfoItem","editInfoItem","faArrowCircleLeft","faBackward","faPlus","faTimes","RouterView","exact","path","Container","App","Router","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26c5b34f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-header\":\"ContactsList_contacts-header__1c1Ps\",\"contacts-list__user-number\":\"ContactsList_contacts-list__user-number__3EVkj\",\"contacts-list__item\":\"ContactsList_contacts-list__item__21hFR\",\"contacts-list__btn-wrapper\":\"ContactsList_contacts-list__btn-wrapper__3GG_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add-info-form\":\"AddInfoForm_add-info-form__2f95B\",\"add-info-form__label\":\"AddInfoForm_add-info-form__label__247L8\",\"add-info-form__input\":\"AddInfoForm_add-info-form__input__ujnm-\",\"add-info-form__textarea\":\"AddInfoForm_add-info-form__textarea__3fda6\",\"add-info-form__buttons\":\"AddInfoForm_add-info-form__buttons__1mV6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup-wrapper\":\"Popup_popup-wrapper__SGtXe\",\"popup-bg\":\"Popup_popup-bg__cB_xq\",\"popup\":\"Popup_popup__1knYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__inp\":\"ContactCreationForm_form__inp__33Pi7\",\"form__buttons\":\"ContactCreationForm_form__buttons__1wXiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirm-form__title\":\"ConfirmationForm_confirm-form__title__1wmoS\",\"confirm-form-buttons\":\"ConfirmationForm_confirm-form-buttons__1gbJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default-btn\":\"DefaultButton_default-btn__YK0Z8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1lMSA\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst storeSlice = createSlice({\r\n  name: 'storeSlice',\r\n\r\n  initialState: {\r\n    contactsList: [{\r\n      ID: \"ws9fe99g\",\r\n      contactName: 'default',\r\n      contactInfo: [],\r\n    }],\r\n    contactForm: {\r\n      ID: uuid().slice(0, 8),\r\n      contactName: '',\r\n      contactInfo: [],\r\n    },\r\n    currentContact: {\r\n      ID: \"ws9fe99g\",\r\n      contactName: 'default',\r\n      contactInfo: [],\r\n    },\r\n    editContactValue: {\r\n      title: '',\r\n      text: '',\r\n    },\r\n    prevContactState: {},\r\n  },\r\n\r\n  reducers: {\r\n    addContactName(state, action) {\r\n      state.contactForm.contactName = action.payload;\r\n    },\r\n    addContact(state, action) {\r\n      state.contactsList.push(action.payload);\r\n    },\r\n    clearContactForm(state) {\r\n      state.contactForm = {\r\n        ID: uuid().slice(0, 8),\r\n        contactName: '',\r\n        contactInfo: [],\r\n      }\r\n    },\r\n    deleteContact(state, action) {\r\n      state.contactsList.filter((contact) => contact.ID !== action.payload);\r\n    },\r\n    setCurrentContact(state, action) {\r\n      state.contactsList.forEach(el => {\r\n        if (el.ID === action.payload) {\r\n          state.currentContact = el;\r\n        }\r\n      })\r\n    },\r\n    addContactInfo(state, action) {\r\n      state.currentContact.contactInfo.push(action.payload);\r\n    },\r\n    saveContactInfo(state) {\r\n      state.contactsList.forEach(el => {\r\n        if (el.ID === state.currentContact.ID) {\r\n          el.contactInfo = state.currentContact.contactInfo;\r\n        }\r\n      })\r\n    },\r\n    deleteContactInfo(state, action) {\r\n      state.currentContact.contactInfo = state.currentContact.contactInfo.filter((info) => info.ID !== action.payload);\r\n    },\r\n    setEditContactValue(state, action) {\r\n      state.currentContact.contactInfo.forEach(item => {\r\n        if (item.ID === action.payload) {\r\n          state.editContactValue.title = item.title;\r\n          state.editContactValue.text = item.text;\r\n        }\r\n      })\r\n    },\r\n    setEditContactTitle(state, action) {\r\n      state.editContactValue.title = action.payload;\r\n    },\r\n    setEditContactText(state, action) {\r\n      state.editContactValue.text = action.payload;\r\n    },\r\n    editContactInfo(state, action) {\r\n      state.currentContact.contactInfo.forEach(item => {\r\n        if (item.ID === action.payload) {\r\n          item.title = state.editContactValue.title;\r\n          item.text = state.editContactValue.text;\r\n          console.log('edit item');\r\n        }\r\n      });\r\n    },\r\n    setPrevContactState(state) {\r\n      state.prevContactState = state.currentContact;\r\n    },\r\n    cancelChange(state) {\r\n      state.currentContact = state.prevContactState;\r\n    },\r\n    clearPrevContactState(state) {\r\n      state.prevContactState = {};\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addContactName,\r\n  addContact,\r\n  clearContactForm,\r\n  deleteContact,\r\n  setCurrentContact,\r\n  addContactInfo,\r\n  saveContactInfo,\r\n  deleteContactInfo,\r\n  setEditContactValue,\r\n  setEditContactTitle,\r\n  setEditContactText,\r\n  editContactInfo,\r\n  setPrevContactState,\r\n  cancelChange,\r\n  clearPrevContactState,\r\n} = storeSlice.actions;\r\n\r\nexport default storeSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst stateSlice = createSlice({\r\n  name: 'stateSlice',\r\n\r\n  initialState: {\r\n    creationPopupIsActive: false,\r\n    delitionPopupIsActive: false,\r\n    addInfoPopupIsActive: false,\r\n    currentContactID: null,\r\n    newUserInfo: {\r\n      ID: uuid().slice(-10),\r\n      title: '',\r\n      text: '',\r\n    },\r\n    currentContactInfoID: null,\r\n    editInfoPopupIsActive: false,\r\n    cancelPopupIsActive: false,\r\n  },\r\n\r\n  reducers: {\r\n    setActiveCreationPopup(state) {\r\n      state.creationPopupIsActive = !state.creationPopupIsActive;\r\n    },\r\n    setActiveDelitionPopup(state) {\r\n      state.delitionPopupIsActive = !state.delitionPopupIsActive;\r\n    },\r\n    setCurrentContactID(state, action) {\r\n      state.currentContactID = action.payload;\r\n    },\r\n    setActiveAddInfoPopup(state) {\r\n      state.addInfoPopupIsActive = !state.addInfoPopupIsActive;\r\n    },\r\n    setUserInfoTitle(state, action) {\r\n      state.newUserInfo.title = action.payload;\r\n    },\r\n    setUserInfoText(state, action) {\r\n      state.newUserInfo.text = action.payload;\r\n    },\r\n    clearNewUserInfo(state) {\r\n      state.newUserInfo = {\r\n        ID: uuid().slice(-10),\r\n        title: '',\r\n        text: '',\r\n      }\r\n    },\r\n    setCurrentContactInfoID(state, action) {\r\n      state.currentContactInfoID = action.payload;\r\n    },\r\n    setActiveEditPopup(state) {\r\n      state.editInfoPopupIsActive = !state.editInfoPopupIsActive;\r\n    },\r\n    setActiveCancelPopup(state) {\r\n      state.cancelPopupIsActive = !state.cancelPopupIsActive;\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  setActiveCreationPopup,\r\n  setActiveDelitionPopup,\r\n  setCurrentContactID,\r\n  setActiveAddInfoPopup,\r\n  setUserInfoTitle,\r\n  setUserInfoText,\r\n  clearNewUserInfo,\r\n  setCurrentContactInfoID,\r\n  setActiveEditPopup,\r\n  setActiveCancelPopup,\r\n} = stateSlice.actions;\r\n\r\nexport default stateSlice.reducer;\r\n","import style from './DefaultButton.module.css';\r\n\r\nfunction DefaultButton({\r\n  onClick,\r\n  type,\r\n  content,\r\n}) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      type={type}\r\n      className={style['default-btn']}>\r\n      {content}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default DefaultButton;\r\n","import style from './Popup.module.css';\r\n\r\nfunction Popup({\r\n  isActive,\r\n  children,\r\n  closeFunc,\r\n}) {\r\n  if (!isActive) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div\r\n      className={style[\"popup-wrapper\"]}>\r\n      <div\r\n        className={style[\"popup-bg\"]}\r\n        onClick={closeFunc}></div>\r\n      <div className={style[\"popup\"]}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup;","import style from './ContactCreationForm.module.css';\r\n\r\nfunction ContactCreationForm({\r\n  onSubmit,\r\n  contactName,\r\n  changeName,\r\n  acceptBtn,\r\n  cancelBtn,\r\n}) {\r\n  return (\r\n    <form\r\n      className={style['form']}\r\n      onSubmit={onSubmit}>\r\n      <input\r\n        className={style['form__inp']}\r\n        placeholder='Contact name: *'\r\n        type=\"text\"\r\n        id=\"contactName\"\r\n        required\r\n        value={contactName}\r\n        onChange={changeName} />\r\n      <div className={style['form__buttons']}>\r\n        {acceptBtn}\r\n        {cancelBtn}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactCreationForm;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport style from './ConfirmationForm.module.css';\r\nimport DefaultButton from '../DefaultButton/DefaultButton';\r\n\r\nfunction ConfirmationForm({\r\n  title,\r\n  accept,\r\n  cancel,\r\n}) {\r\n  return (\r\n    <div>\r\n      <h4 className={style['confirm-form__title']} >{title}</h4>\r\n      <div className={style['confirm-form-buttons']}>\r\n        <DefaultButton\r\n          type='button'\r\n          onClick={accept}\r\n          content={<FontAwesomeIcon icon={faCheckCircle} />} />\r\n        <DefaultButton\r\n          type='button'\r\n          onClick={cancel}\r\n          content={<FontAwesomeIcon icon={faTimesCircle} />} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConfirmationForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {\r\n  addContactName,\r\n  addContact,\r\n  clearContactForm,\r\n  deleteContact,\r\n  setCurrentContact,\r\n} from '../../store/storeSlice';\r\n\r\nimport {\r\n  setActiveCreationPopup,\r\n  setActiveDelitionPopup,\r\n  setCurrentContactID,\r\n} from '../../store/stateSlice/stateSlice';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faUserPlus,\r\n  faUserMinus,\r\n  faUserEdit,\r\n  faUserTimes,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport DefaultButton from '../../components/DefaultButton/DefaultButton';\r\nimport Popup from '../../components/Popup/Popup';\r\nimport ContactCreationForm from '../../components/UserCreationForm/ContactCreationForm';\r\nimport ConfirmationForm from '../../components/ConfirmationForm/ConfirmationForm';\r\n\r\nimport style from './ContactsList.module.css';\r\n\r\nfunction ContactsList() {\r\n  const store = useSelector((state) => state.store);\r\n  const state = useSelector((state) => state.state);\r\n  const reduxDispatch = useDispatch();\r\n\r\n  const contactsList = store.contactsList;\r\n\r\n  const openCreationPopup = () => {\r\n    reduxDispatch(setActiveCreationPopup());\r\n    reduxDispatch(clearContactForm());\r\n  }\r\n\r\n  const createContact = (e) => {\r\n    e.preventDefault();\r\n    reduxDispatch(addContact(store.contactForm));\r\n    openCreationPopup();\r\n  };\r\n\r\n  const openDeletionPopup = () => {\r\n    reduxDispatch(setActiveDelitionPopup());\r\n  };\r\n\r\n  const delitionRequest = (id) => {\r\n    reduxDispatch(setCurrentContactID(id));\r\n    openDeletionPopup();\r\n  };\r\n\r\n  const removeContact = () => {\r\n    reduxDispatch(deleteContact(state.currentContactID));\r\n    openDeletionPopup();\r\n  };\r\n\r\n  return (\r\n    <div className=\"contacts\">\r\n      <Popup\r\n        isActive={state.delitionPopupIsActive}\r\n        closeFunc={openDeletionPopup}>\r\n        <ConfirmationForm\r\n          title={'delete a contact?'}\r\n          accept={removeContact}\r\n          cancel={openDeletionPopup} />\r\n      </Popup>\r\n\r\n      <Popup\r\n        isActive={state.creationPopupIsActive}\r\n        closeFunc={openCreationPopup}>\r\n        <ContactCreationForm\r\n          onSubmit={createContact}\r\n          contactName={store.contactName}\r\n          changeName={(e) => reduxDispatch(addContactName(e.target.value))}\r\n          cancelBtn={\r\n            <DefaultButton\r\n              onClick={openCreationPopup}\r\n              type='button'\r\n              content={<FontAwesomeIcon icon={faUserTimes}></FontAwesomeIcon>} />}\r\n          acceptBtn={\r\n            <DefaultButton\r\n              type='submit'\r\n              content={<FontAwesomeIcon icon={faUserPlus}></FontAwesomeIcon>} />} />\r\n      </Popup>\r\n\r\n      <div className={style[\"contacts-header\"]}>\r\n        <DefaultButton\r\n          onClick={openCreationPopup}\r\n          type='button'\r\n          content={<FontAwesomeIcon icon={faUserPlus}></FontAwesomeIcon>} />\r\n      </div>\r\n      <ul className='contacts-list'>\r\n        {\r\n          contactsList.map((el, indx) =>\r\n            <li key={el.ID} className={style[\"contacts-list__item\"]}>\r\n              <div>\r\n                <span className={style['contacts-list__user-number']}>{indx + 1}.</span>\r\n                <span className={style['contacts-list__username']}>{el.contactName}</span>\r\n              </div>\r\n              <div className={style['contacts-list__buttons']}>\r\n                <span className={style['contacts-list__btn-wrapper']}>\r\n                  <NavLink to={`/user:${el.ID}`}>\r\n                    <DefaultButton\r\n                      className={style['contacts-list__btn']}\r\n                      onClick={() => reduxDispatch(setCurrentContact(el.ID))}\r\n                      type='button'\r\n                      content={<FontAwesomeIcon icon={faUserEdit}></FontAwesomeIcon>} />\r\n                  </NavLink>\r\n                </span>\r\n                <span className={style['contacts-list__btn-wrapper']}>\r\n                  <DefaultButton\r\n                    className={style['contacts-list__btn']}\r\n                    onClick={() => delitionRequest(el.ID)}\r\n                    type='button'\r\n                    content={<FontAwesomeIcon icon={faUserMinus}></FontAwesomeIcon>} />\r\n                </span>\r\n              </div>\r\n            </li>)\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactsList;","import style from './AddInfoForm.module.css';\r\n\r\nfunction AddInfoForm({\r\n  onSubmit,\r\n  title,\r\n  info,\r\n  acceptBtn,\r\n  cancelBtn,\r\n  setTitle,\r\n  setInfo,\r\n}) {\r\n  return (\r\n    <form\r\n      className={style['add-info-form']}\r\n      onSubmit={onSubmit}>\r\n      <label\r\n        className={style['add-info-form__label']}\r\n        htmlFor=\"add-info-title\">Title:</label>\r\n      <input\r\n        required\r\n        className={style['add-info-form__input']}\r\n        type=\"text\"\r\n        id=\"add-info-title\"\r\n        value={title}\r\n        onChange={setTitle} />\r\n      <label\r\n        className={style['add-info-form__label']}\r\n        htmlFor=\"add-info-info\">Information:</label>\r\n      <textarea\r\n        required\r\n        className={`${style['add-info-form__input']} ${style['add-info-form__textarea']}`}\r\n        type=\"text\"\r\n        id=\"add-info-info\"\r\n        value={info}\r\n        onChange={setInfo} />\r\n      <div className={style['add-info-form__buttons']}>\r\n        {acceptBtn}\r\n        {cancelBtn}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddInfoForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTimes,\r\n  faPlus,\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faBackward,\r\n  faArrowCircleLeft,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport {\r\n  addContactInfo,\r\n  saveContactInfo,\r\n  deleteContactInfo,\r\n  setEditContactValue,\r\n  setEditContactTitle,\r\n  setEditContactText,\r\n  editContactInfo,\r\n  setPrevContactState,\r\n  cancelChange,\r\n  clearPrevContactState,\r\n} from '../../store/storeSlice';\r\nimport {\r\n  setActiveAddInfoPopup,\r\n  setUserInfoTitle,\r\n  setUserInfoText,\r\n  clearNewUserInfo,\r\n  setActiveDelitionPopup,\r\n  setCurrentContactInfoID,\r\n  setActiveEditPopup,\r\n  setActiveCancelPopup,\r\n} from '../../store/stateSlice/stateSlice';\r\n\r\nimport DefaultButton from '../../components/DefaultButton/DefaultButton';\r\nimport Popup from '../../components/Popup/Popup';\r\nimport AddInfoForm from '../../components/AddInfoForm/AddInfoForm';\r\nimport ConfirmationForm from '../../components/ConfirmationForm/ConfirmationForm';\r\n\r\nimport style from './UserScreen.module.css';\r\n\r\nfunction UserScreen() {\r\n  const store = useSelector((state) => state.store);\r\n  const state = useSelector((state) => state.state);\r\n  const reduxDispatch = useDispatch();\r\n\r\n  const contact = store.currentContact;\r\n\r\n  const saveContact = () => {\r\n    reduxDispatch(saveContactInfo());\r\n  };\r\n\r\n  const openAddInfoPopup = () => {\r\n    reduxDispatch(clearNewUserInfo());\r\n    reduxDispatch(setActiveAddInfoPopup());\r\n  };\r\n\r\n  const addInfoItem = (e) => {\r\n    e.preventDefault();\r\n    reduxDispatch(addContactInfo(state.newUserInfo));\r\n    openAddInfoPopup();\r\n    saveContact();\r\n  }\r\n\r\n  const openDeletionPopup = () => {\r\n    reduxDispatch(setActiveDelitionPopup());\r\n  };\r\n\r\n  const delitionRequest = (id) => {\r\n    reduxDispatch(setCurrentContactInfoID(id));\r\n    openDeletionPopup();\r\n  };\r\n\r\n  const removeContact = () => {\r\n    reduxDispatch(deleteContactInfo(state.currentContactInfoID));\r\n    saveContact();\r\n    openDeletionPopup();\r\n  };\r\n\r\n  const openEditInfoPopup = () => {\r\n    reduxDispatch(setActiveEditPopup());\r\n  };\r\n\r\n  const setEditItemInfo = (id) => {\r\n    reduxDispatch(setCurrentContactInfoID(id));\r\n    reduxDispatch(setEditContactValue(id));\r\n    reduxDispatch(setPrevContactState());\r\n    openEditInfoPopup();\r\n  };\r\n\r\n  const editInfoItem = (e) => {\r\n    e.preventDefault();\r\n    reduxDispatch(editContactInfo(state.currentContactInfoID));\r\n    saveContact();\r\n    openEditInfoPopup();\r\n  };\r\n\r\n  const openUndoChangesPopup = () => {\r\n    reduxDispatch(setActiveCancelPopup());\r\n  };\r\n\r\n  const undoChanges = () => {\r\n    reduxDispatch(cancelChange());\r\n    reduxDispatch(clearPrevContactState());\r\n    openUndoChangesPopup();\r\n  };\r\n\r\n  return (\r\n    <div className='user'>\r\n      <Popup\r\n        isActive={state.cancelPopupIsActive}\r\n        closeFunc={openUndoChangesPopup}>\r\n        <ConfirmationForm\r\n          title={'undo the changes?'}\r\n          accept={undoChanges}\r\n          cancel={openUndoChangesPopup} />\r\n      </Popup>\r\n\r\n      <Popup\r\n        isActive={state.delitionPopupIsActive}\r\n        closeFunc={openDeletionPopup}>\r\n        <ConfirmationForm\r\n          title={'delete this info?'}\r\n          accept={removeContact}\r\n          cancel={openDeletionPopup} />\r\n      </Popup>\r\n\r\n      <Popup\r\n        isActive={state.addInfoPopupIsActive}\r\n        closeFunc={openAddInfoPopup}>\r\n        <AddInfoForm\r\n          onSubmit={(e) => addInfoItem(e)}\r\n          title={state.newUserInfo.title}\r\n          info={state.newUserInfo.text}\r\n          setTitle={(e) => reduxDispatch(setUserInfoTitle(e.target.value))}\r\n          setInfo={(e) => reduxDispatch(setUserInfoText(e.target.value))}\r\n          acceptBtn={\r\n            <DefaultButton\r\n              type='submit'\r\n              content={<FontAwesomeIcon icon={faCheckCircle} />} />}\r\n          cancelBtn={\r\n            <DefaultButton\r\n              onClick={openAddInfoPopup}\r\n              type='button'\r\n              content={<FontAwesomeIcon icon={faTimesCircle} />} />} />\r\n      </Popup>\r\n\r\n      <Popup\r\n        isActive={state.editInfoPopupIsActive}\r\n        closeFunc={openEditInfoPopup}>\r\n        <AddInfoForm\r\n          onSubmit={(e) => editInfoItem(e)}\r\n          title={store.editContactValue.title}\r\n          info={store.editContactValue.text}\r\n          setTitle={(e) => reduxDispatch(setEditContactTitle(e.target.value))}\r\n          setInfo={(e) => reduxDispatch(setEditContactText(e.target.value))}\r\n          acceptBtn={\r\n            <DefaultButton\r\n              type='submit'\r\n              content={<FontAwesomeIcon icon={faCheckCircle} />} />}\r\n          cancelBtn={\r\n            <DefaultButton\r\n              onClick={openEditInfoPopup}\r\n              type='button'\r\n              content={<FontAwesomeIcon icon={faTimesCircle} />} />} />\r\n      </Popup>\r\n\r\n      <NavLink\r\n        to={'/'} \r\n        onClick={() => reduxDispatch(clearPrevContactState())}>\r\n        <span className={style['back-link']}>\r\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Back to contacts list</span>\r\n      </NavLink>\r\n      <div className={style['user-info']}>\r\n        <div>\r\n          <h4 className={style['user-info__name']}>{contact.contactName}</h4>\r\n          <span className={style['user-info__id']}>id: {contact.ID}</span>\r\n        </div>\r\n        {\r\n          store.prevContactState.ID ?\r\n            <DefaultButton\r\n              onClick={openUndoChangesPopup}\r\n              type='button'\r\n              content={<FontAwesomeIcon icon={faBackward} />} /> : null\r\n        }\r\n      </div>\r\n      <div className={style['contact-info-wrapper']}>\r\n        <span className={style['contact-info__title']}>Contact information:</span>\r\n        <DefaultButton\r\n          onClick={openAddInfoPopup}\r\n          type='button'\r\n          content={<FontAwesomeIcon icon={faPlus} />} />\r\n      </div>\r\n      <ul className={style['user-info-list']}>\r\n        {\r\n          contact.contactInfo.map((el) =>\r\n            <li key={uuid()}\r\n              className={style['user-info-list__item']}>\r\n              <div className={style['user-info-list-title-wrapper']}>\r\n                <h6 className={style['user-info-list__title']}>{el.title}:</h6>\r\n                <div className={style['user-info-list__buttons']}>\r\n                  <button\r\n                    className={style['user-info-list__edit-btn']}\r\n                    onClick={() => setEditItemInfo(el.ID)}>edit</button>\r\n                  <DefaultButton\r\n                    onClick={() => delitionRequest(el.ID)}\r\n                    type='button'\r\n                    content={<FontAwesomeIcon icon={faTimes} />} />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span className={style['user-info-list__text']}>\r\n                  {el.text}\r\n                </span>\r\n              </div>\r\n            </li>)\r\n        }\r\n      </ul>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default UserScreen;","import { Switch, Route } from \"react-router\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ContactsList from \"./screens/ContactsList/ContactsList\";\r\nimport UserScreen from \"./screens/UserScreen/UserScreen\";\r\n\r\nfunction RouterView() {\r\n  const state = useSelector(state => state.state);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path='/'>\r\n        <ContactsList />\r\n      </Route>\r\n      <Route\r\n        path={`/user:${state.currentContactID}`}>\r\n        <UserScreen />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <div>404 Not Found</div>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n","import style from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={style['container']}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import RouterView from \"./Router\";\r\n\r\nimport Container from \"./components/Container/Container\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <RouterView />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport storeSlice from './storeSlice';\r\nimport stateSlice from './stateSlice/stateSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    store: storeSlice,\r\n    state: stateSlice,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider as StoreProvider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <StoreProvider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StoreProvider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-info\":\"UserScreen_user-info__VyGcx\",\"user-info__name\":\"UserScreen_user-info__name__OmP-a\",\"user-info__id\":\"UserScreen_user-info__id__3SG8e\",\"contact-info-wrapper\":\"UserScreen_contact-info-wrapper__1XtXs\",\"contact-info__title\":\"UserScreen_contact-info__title__2ado6\",\"user-info-list\":\"UserScreen_user-info-list__1VmwS\",\"user-info-list__item\":\"UserScreen_user-info-list__item__1djZZ\",\"user-info-list-title-wrapper\":\"UserScreen_user-info-list-title-wrapper__3cetn\",\"user-info-list__title\":\"UserScreen_user-info-list__title__2nbaI\",\"user-info-list__buttons\":\"UserScreen_user-info-list__buttons__3-Rmb\",\"user-info-list__edit-btn\":\"UserScreen_user-info-list__edit-btn__1O9ge\",\"user-info-list__text\":\"UserScreen_user-info-list__text__3GUKP\",\"back-link\":\"UserScreen_back-link__27Fp_\"};"],"sourceRoot":""}